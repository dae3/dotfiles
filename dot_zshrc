# key bindings

# options and settings
setopt autocd
setopt interactive_comments

typeset -U path fpath manpath
cdpath=(labs projects)

# path and path-y things
[[ -d ${HOME}/.config/zsh ]] && fpath+=${HOME}/.config/zsh

if [[ -d "${HOME}/.local/bin" ]] && ! [[ "$PATH" =~ "$HOME/.local/bin" ]]
then
    PATH="$HOME/.local/bin:$PATH"
fi

# prompt theme
autoload -Uz promptinit
promptinit
prompt daniel

# completion
# setup completions for things that might exist
COMPLETIONS=(chezmoi gh tilt kubectl kind pack podman skaffold minikube helm devpod kn func https http dlv)
LOCALCOMP=${HOME}/.config/completion
fpath+=${LOCALCOMP}
if [ ! -d ${LOCALCOMP} ]; then
  mkdir -p ${LOCALCOMP}
fi
for c in ${COMPLETIONS}; do
  which $c > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    if [ ! -f ${LOCALCOMP}/_$c ] || [ $(which $c) -nt ${LOCALCOMP}/_$c ]; then
      echo "Setting up completion for $c"
      ($c completion zsh > ${LOCALCOMP}/_$c) || true
    fi
  fi
done

## completion shinyness
autoload -U compinit && compinit
# don't try the fuzzier completers until second attempt
zstyle -e ':completion:*' completer '
if [[ $_last_try != "$HISTNO$BUFFER$CURSOR" ]]; then
  _last_try="$HISTNO$BUFFER$CURSOR"
  reply=(_complete _match _prefix)
else
  reply=(_ignored _correct _approximate)
  fi'
zstyle ':completion:*' menu select
zstyle ':completion:*' use-cache on
zstyle ':completion:*' cache-path "$XDG_CACHE_HOME/zsh/.zcompcache"
zstyle ':completion:*:correct:::' max-errors 2 not-numeric
zstyle ':completion:*:*:*:*:descriptions' format '%F{green}-- %d --%f'
zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f'
zstyle ':completion:*:*:-command-:*:*' group-order alias builtins functions commands
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
autoload -U predict-on && predict-on
zle -N predict-off
autoload predict-on
predict-on
autoload bashcompinit && bashcompinit

## annoying things with nonstandard completion setup, ie not
## via package manager or `$THING completion zsh`
### aws cli
### https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-completion.html#cli-command-completion-linux]
if command -v aws_completer > /dev/null 2>&1 ; then
  complete -C $(command -v aws_completer) aws
fi

### gcloud
### TODO: make this install location independent
[ -d /usr/share/google-cloud-sdk ] && source /usr/share/google-cloud-sdk/completion.zsh.inc

### go
if command -v go > /dev/null 2>&1
then
  GOCOMPLETE=${HOME}/.local/bin/gocomplete
  [ -x ${GOCOMPLETE} ] || GOBIN=${HOME}/.local/bin go install github.com/posener/complete/v2/gocomplete@v2.1.0
  complete -C ${GOCOMPLETE} go
fi

## keybindings
bindkey -v
bindkey ^X^K vi-kill-eol
function predict-toggle() {
  print $ZLE_STATE
}
zle -N predict-toggle predict-toggle
bindkey '^T' predict-toggle

# hooks for things that might exist
## homebrew
if [ -d /home/linuxbrew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

## direnv
which direnv > /dev/null 2>&1
if [ $? -eq 0 ]; then
  eval "$(direnv hook zsh)"
fi

# functions
## chezmoi edit shorthand
function dotvim() {
  chezmoi edit --apply $1
}

# nvm via homebrew hack
export NVM_DIR="$HOME/.nvm"
[ -s "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh" ] && \. "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/home/linuxbrew/.linuxbrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/home/linuxbrew/.linuxbrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


# vim: ft=zsh ff=unix sw=2 ts=2 ai et
