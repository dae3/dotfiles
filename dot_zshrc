typeset -U path fpath manpath
bindkey -e
setopt autocd

cdpath=(labs projects)
[[ -d ${HOME}/.config/zsh ]] && fpath+=${HOME}/.config/zsh

if ! [[ "$PATH" =~ "$HOME/.local/bin:$HOME/bin:" ]]
then
    PATH="$HOME/.local/bin:$HOME/bin:$PATH"
fi

autoload -Uz promptinit
promptinit
prompt daniel /dev/null 2>&1

autoload -U compinit && compinit
zstyle ':completion:*' completer _extensions _complete # _approximate
zstyle ':completion:*' menu select
zstyle ':completion:*:*:*:*:descriptions' format '%F{green}-- %d --%f'
zstyle ':completion:*:*:*:*:corrections' format '%F{yellow}!- %d (errors: %e) -!%f'
zstyle ':completion:*:*:-command-:*:*' group-order alias builtins functions commands
zstyle ':completion:*:default' list-colors ${(s.:.)LS_COLORS}
autoload predict-on
predict-on

# setup completions for things that might exist
COMPLETIONS=(chezmoi gh tilt kubectl kind pack podman skaffold minikube helm devpod kn func)
LOCALCOMP=${HOME}/.config/completion
fpath+=${LOCALCOMP}
if [ ! -d ${LOCALCOMP} ]; then
  mkdir -p ${LOCALCOMP}
fi
for c in ${COMPLETIONS}; do
  which $c > /dev/null 2>&1
  if [ $? -eq 0 ]; then
    if [ ! -f ${LOCALCOMP}/_$c ] || [ $(which $c) -nt ${LOCALCOMP}/_$c ]; then
      echo "Setting up completion for $c"
      ($c completion zsh > ${LOCALCOMP}/_$c) || true
    fi
  fi
done

# aws cli completion nonsense
# https://docs.aws.amazon.com/cli/latest/userguide/cli-configure-completion.html#cli-command-completion-linux]
if [[ -x /usr/local/bin/aws && -x /usr/local/bin/aws_completer ]]; then
  autoload bashcompinit && bashcompinit
  complete -C '/usr/local/bin/aws_completer' aws
fi

# gcloud completion nonsense
[ -d /usr/share/google-cloud-sdk ] && source /usr/share/google-cloud-sdk/completion.zsh.inc

# go completion nonsense
which go > /dev/null 2>&1
if [ $? -eq 0 ]; then
  GOCOMPLETE=${HOME}/.local/bin/gocomplete
  [ -x ${GOCOMPLETE} ] || GOBIN=${HOME}/.local/bin go install github.com/posener/complete/v2/gocomplete@v2.1.0
  autoload bashcompinit && bashcompinit
  complete -C ${GOCOMPLETE} go
fi


if [ -d /home/linuxbrew ]; then
  eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"
fi

which direnv > /dev/null 2>&1
if [ $? -eq 0 ]; then
  eval "$(direnv hook zsh)"
fi

# toolbox container name
if [ -f /run/.containerenv ]; then
  export TOOLBOXNAME=$(awk -F'"' '/^name/ { print $2 }' /run/.containerenv)
fi

# chezmoi edit shorthand
function dotvim() {
  chezmoi edit --apply $1
}

# nvm via homebrew hack
export NVM_DIR="$HOME/.nvm"
[ -s "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh" ] && \. "/home/linuxbrew/.linuxbrew/opt/nvm/nvm.sh"  # This loads nvm
[ -s "/home/linuxbrew/.linuxbrew/opt/nvm/etc/bash_completion.d/nvm" ] && \. "/home/linuxbrew/.linuxbrew/opt/nvm/etc/bash_completion.d/nvm"  # This loads nvm bash_completion


# vim: ft=zsh ff=unix sw=2 ts=2 ai et
